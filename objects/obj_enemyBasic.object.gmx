<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemyOni</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// Settings
image_speed = 1 / (2/3 * room_speed);
damage = 1;
MAX_RANGE = 320;
FIRE_TIME = 3 * room_speed; // 3 Seconds between shots.
RESUME_TIME = 1.5 * room_speed;

// Defaults, replaced by creation code
actions = array(array(2, 1));

// Initialization
actionNumber = 0;
playerLock = false;
resumeTimer = 0;
fireTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.DEAD = true) {
    speed = 0;
    image_speed = 0;
    exit;
}

var curAction = actions[actionNumber];
var player = instance_nearest(x, y, obj_player);
var dist = point_distance(x, y, player.x, player.y);

if (!playerLock &amp;&amp; dist &lt;= MAX_RANGE) {
    playerLock = true;
    speed = 0;
}

if (playerLock) {
    // Locking onto and shooting the player
    if (dist &lt;= MAX_RANGE) {
        resumeTimer = RESUME_TIME;
        if (fireTimer &lt;= 0) {
            var fb = instance_create(x, y, obj_fireball);
            var dir = point_direction(x, y, player.x, player.y);
            fb.direction = dir;
            fb.image_angle = dir;
            fb.immuneInst = self;
            fb.damage = damage;
            
            fireTimer = FIRE_TIME;
        } else {
            fireTimer -= 1;
        }
    } else {
        if (resumeTimer &lt;= 0) {
            playerLock = false;
            fireTimer = 0;
        } else {
            resumeTimer -= 1;
        }
    }
} else {
// Pre-defined action code //
    switch (curAction[0]) {
        case 1: {
            complete = enemy_move(curAction[1], curAction[2], curAction[3] / room_speed);
            break;
        }
        case 2: {
            complete = enemy_wait(curAction[1]);
            break;
        }
    }
}

if (complete) {
    actionNumber++;
    
    if (actionNumber == array_length_1d(actions)) {
        actionNumber = 0;
    }
}

// DEBUG //
if (debug) {
    draw_circle(x, y, MAX_RANGE, true);
}
// DEBUG //
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="74">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (debug) {
    draw_circle(x - view_xview[0], y - view_yview[0], MAX_RANGE, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
