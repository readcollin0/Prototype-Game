<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_speechTrigger</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Settings
FADE_SPEED = 1 / (1 * room_speed);
WAIT_TIME = 1 * room_speed;

ACTION_DELAY = 1.9 * room_speed

// Defaults
nextRoom = rm_quit;
transitionRoom = rm_quit;
transitionFile = "intro.txt";
transitionPlayer = false;
nextRoomX = 0;
nextRoomY = 0;
playerDir = 1;

// Initialization
doFade = false;

if (get_setting("debugMode")) {
    visible = true;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (doFade) {
    if (waitTime &gt; 0) {
        waitTime--;
    } else {
        if (nextRoom == rm_intro) {
            global.nextTransitionRoom = transitionRoom;
            global.nextTransitionFile = transitionFile;
            global.transitionPlayer = transitionPlayer;
            global.nextRoomX = nextRoomX;
            global.nextRoomY = nextRoomY;
            global.nextPlayerDir = playerDir;
        } else {
            global.player.x = nextRoomX;
            global.player.y = nextRoomY;
            global.player.dir = playerDir;
        }
        doFade = false;
        room_goto(nextRoom);
    }
} else {
    var collide = place_meeting(x, y, obj_player);
    if (collide) {
        doFade = true;
        fade(FADE_SPEED, WAIT_TIME, FADE_SPEED);
        waitTime = ACTION_DELAY;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
