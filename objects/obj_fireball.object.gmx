<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fireball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>startSpeed = 250 / room_speed;
speed = 250 / room_speed;

// Time to live: 1 / (seconds * room_speed)
FADE_SPEED = 0;

// Time to live: scale / (seconds * room_speed)
SHRINK_SPEED = 0; // Shrink after 1 second

// Time to live: startSpeed / (seconds * room_speed)
SLOW_SPEED = 0;

// Time to zero: damage / (seconds * room_speed)
DAMAGE_DROP = 0;

immuneInst = noone;

damage = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.DEAD) {
    speed = 0;
    exit;
}

// Collisions
var hit = instance_place(x, y, par_destructible);
if (hit != noone &amp;&amp; hit != immuneInst) {
    hit.hp -= damage;
    instance_destroy();
}

if (instance_place(x, y, par_wall) != noone) {
    instance_destroy();
}

// Movement changes
if (FADE_SPEED &gt; 0) {
    image_alpha -= FADE_SPEED;
    if (image_alpha &lt;= 0) {
        instance_destroy();
    }
}

if (SLOW_SPEED &gt; 0) {
    speed -= SLOW_SPEED;
    if (speed &lt;= 0) {
        instance_destroy();
    }
}

if (SHRINK_SPEED &gt; 0) {
    image_xscale -= SHRINK_SPEED;
    image_yscale -= SHRINK_SPEED;
    if (image_xscale &lt;= 0) {
        instance_destroy();
    }
}

if (DAMAGE_DROP &gt; 0) {
    damage -= DAMAGE_DROP
}

depth = -(100 * y + 25);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
